{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","titleError","setTitleError","setDescription","setImgUrl","imgUrlError","setImgUrlError","setImdbUrl","imdbUrlError","setImdbUrlError","setImdbId","imdbIdError","setImdbIdError","name","onSubmit","event","preventDefault","trim","length","onBlur","target","value","type","placeholder","onChange","cn","error","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7d6b984.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\nimport cn from 'classnames';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [description, setDescription] = useState('');\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [imgUrlError, setImgUrlError] = useState(false);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n\n  const [imdbId, setImdbId] = useState('');\n  const [imdbIdError, setImdbIdError] = useState(false);\n\n  const handleFormClear = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title.trim().length < 1) {\n      setTitleError(true);\n    }\n\n    if (imgUrl.trim().length < 6) {\n      setImgUrlError(true);\n    }\n\n    if (imdbUrl.trim().length < 6) {\n      setImdbUrlError(true);\n    }\n\n    if (imdbId.trim().length < 6) {\n      setImdbIdError(true);\n    }\n\n    if (title.trim().length > 6\n      && imgUrl.trim().length > 6\n      && imdbUrl.trim().length > 6\n      && imdbId.trim().length > 6) {\n      const newMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      onAdd(newMovie);\n      handleFormClear();\n    }\n  };\n\n  return (\n    <form\n      className=\"newMovie\"\n      name=\"newMovie\"\n      onSubmit={handleFormSubmit}\n    >\n      <input\n        onBlur={(event) => {\n          setTitleError(() => (\n            event.target.value.trim().length < 1\n          ));\n        }}\n        className=\"newMovie__input\"\n        name=\"title\"\n        type=\"text\"\n        placeholder=\"Enter the title\"\n        value={title}\n        onChange={event => setTitle(event?.target.value)}\n      />\n      <span\n        className={cn('disabled', {\n          error: titleError,\n        })}\n      >\n        Please enter the title\n      </span>\n\n      <input\n        className=\"newMovie__input\"\n        name=\"description\"\n        type=\"text\"\n        placeholder=\"Enter the description\"\n        value={description}\n        onChange={event => setDescription(event?.target.value)}\n      />\n      <span\n        className=\"disabled\"\n      >\n        Please enter the description\n      </span>\n\n      <input\n        onBlur={(event) => {\n          setImgUrlError(() => (\n            event.target.value.trim().length < 6\n          ));\n        }}\n        className=\"newMovie__input\"\n        name=\"imgUrl\"\n        type=\"text\"\n        placeholder=\"Enter the image URL\"\n        value={imgUrl}\n        onChange={event => setImgUrl(event?.target.value)}\n      />\n      <span\n        className={cn('disabled', {\n          error: imgUrlError,\n        })}\n      >\n        Please enter the image URL\n      </span>\n\n      <input\n        onBlur={(event) => {\n          setImdbUrlError(() => (\n            event.target.value.trim().length < 6\n          ));\n        }}\n        className=\"newMovie__input\"\n        name=\"imdbUrl\"\n        type=\"text\"\n        placeholder=\"Enter the IMDB URL\"\n        value={imdbUrl}\n        onChange={event => setImdbUrl(event?.target.value)}\n      />\n      <span\n        className={cn('disabled', {\n          error: imdbUrlError,\n        })}\n      >\n        Please enter the IMDB URL\n      </span>\n\n      <input\n        onBlur={(event) => {\n          setImdbIdError(() => (\n            event.target.value.trim().length < 6\n          ));\n        }}\n        className=\"newMovie__input\"\n        name=\"imdbId\"\n        type=\"text\"\n        placeholder=\"Enter the IMDB ID\"\n        value={imdbId}\n        onChange={event => setImdbId(event?.target.value)}\n      />\n      <span\n        className={cn('disabled', {\n          error: imdbIdError,\n        })}\n      >\n        Please enter the IMDB ID\n      </span>\n\n      <div>\n        <button\n          className=\"newMovie__button\"\n          type=\"submit\"\n        >\n          Add new movie\n        </button>\n      </div>\n\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}